apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'walle'

// 注：需要配置符号表时，使用bugly插件，使APP Crash堆栈的可读性更高，建议您配置符号表文件
apply plugin: 'bugly'
bugly {
    appId = '521262bdd7'
    appKey = 'e2542a9f-9cd4-4d11-9f22-333e2ea5f4ec'
    debug = true
    execute = true
    upload = true
}

//获取时间
static def releaseTime() {
    return new Date().format("yyyy年MM月dd日HH时mm分ss秒", TimeZone.getTimeZone("Asia/Shanghai"))
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    //默认配置，是ProductFlavor类型。它共享给其他ProductFlavor使用
    defaultConfig {
        applicationId "cn.ycbjie.ycaudioplayer"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 2
        versionName "1.1"
        // dex突破65535的限制
        multiDexEnabled true

        ndk {
            // yc 设置支持的SO库架构，so库不要支持所有
            abiFilters 'armeabi', 'x86', 'armeabi-v7a' //'x86_64', 'arm64-v8a'
        }
    }

    //yc 过滤掉不支持的平台
    //PackagingOptions类型
    packagingOptions {
        exclude "lib/arm64-v8a/librealm-jni.so"
        exclude "lib/mips/librealm-jni.so"
        exclude "lib/x86/librealm-jni.so"
        exclude "lib/x86_64/librealm-jni.so"
    }

    //BuildType类型
    buildTypes {
        //会生成一个buildConfig
        //如果需要修改网址，请修改 url.properties 文件
        debug {
            minifyEnabled false
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "int", "URL_CONFIG", "" + getUrl(0) + ""
            buildConfigField "String", "BUILD_TIME", "\"" + releaseTime() + "\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        preview {
            minifyEnabled false
            buildConfigField "boolean", "IS_DEBUG", "true"
            buildConfigField "int", "URL_CONFIG", "" + getUrl(1) + ""
            buildConfigField "String", "BUILD_TIME", "\"" + releaseTime() + "\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            buildConfigField "boolean", "IS_DEBUG", "false"
            buildConfigField "int", "URL_CONFIG", "" + getUrl(2) + ""
            buildConfigField "String", "BUILD_TIME", "\"" + releaseTime() + "\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //签名配置，SigningConfig类型
    signingConfigs {
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
            try {
                def signP = getSigningProperties(true)
                storeFile file(signP[0])
                storePassword signP[1]
                keyAlias signP[2]
                keyPassword signP[3]
            } catch (ex) {
                ex.printStackTrace()
            }
        }

        release {
            v1SigningEnabled true
            v2SigningEnabled true
            try {
                def signP = getSigningProperties(false)
                storeFile file(signP[0])
                storePassword signP[1]
                keyAlias signP[2]
                keyPassword signP[3]
            } catch (ex) {
                ex.printStackTrace()
            }
        }
    }


    android {
        //lint配置，LintOptions类型
        lintOptions {
            checkReleaseBuilds false
            abortOnError false
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //官方库
    compile 'com.android.support:appcompat-v7:25.4.0'
    compile 'com.android.support:support-v4:25.4.0'
    compile 'com.android.support:recyclerview-v7:25.4.0'
    compile 'com.android.support:design:25.4.0'
    compile 'com.android.support:cardview-v7:25.4.0'
    compile 'com.android.support:support-annotations:25.3.1'
    compile 'com.android.support:multidex:1.0.1'

    //网络请求retrofit2+Rx
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.okhttp3:okhttp:3.8.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    //compile 'io.reactivex:rxandroid:1.1.0'
    //compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.2'
    compile 'io.reactivex.rxjava2:rxjava:2.1.11'
    compile 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    //注解
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.dagger:dagger:2.13'
    apt 'com.google.dagger:dagger-compiler:2.13'

    compile 'com.tencent.bugly:crashreport:2.6.6'
    compile 'com.tencent.bugly:nativecrashreport:3.3.1'

    compile 'com.blankj:utilcode:1.12.5'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'jp.wasabeef:glide-transformations:2.0.2'
    compile 'pub.devrel:easypermissions:1.0.1'
    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    compile 'com.liulishuo.filedownloader:library:1.7.2'
    compile('com.alibaba.android:vlayout:1.2.2@aar') {
        transitive = true
    }
    compile 'me.yokeyword:fragmentation:1.3.3'
    compile 'com.meituan.android.walle:library:1.1.6'

    compile 'org.yczbj:YCRefreshViewLib:2.5'
    compile 'cn.yc:YCCountDownViewLib:1.0'
    compile 'cn.yc:YCUtilsLib:1.6.2'
    compile 'cn.yc:YCDialogLib:3.5'
    compile 'cn.yc:YCBannerLib:1.3'
    compile 'cn.yc:YCVideoPlayerLib:2.4.5'
    compile 'cn.yc:YCBaseAdapterLib:1.3'
    compile 'cn.yc:YCStatusBarLib:1.3'
    compile 'cn.yc:YCProgressLib:1.2'
    compile 'cn.yc:YCThreadPoolLib:1.3.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}


//walle {
//    // 指定渠道包的输出路径
//    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
//    // 定制渠道包的APK的文件名称
//    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
//    // 渠道配置文件
//    channelFile = new File("${project.getProjectDir()}/channel")
//}


static String[] getSigningProperties(boolean isDebug) {
    File propFile = new File('sign.properties')
    if (propFile.exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (isDebug) {
            def signP = new String[4];
            signP[0] = props['DEBUG_STORE_FILE']
            signP[1] = props['STORE_PASSWORD']
            signP[2] = props['KEY_ALIAS']
            signP[3] = props['KEY_PASSWORD']
            return signP
        } else {
            def signP = new String[4];
            signP[0] = props['STORE_FILE']
            signP[1] = props['STORE_PASSWORD']
            signP[2] = props['KEY_ALIAS']
            signP[3] = props['KEY_PASSWORD']
            return signP
        }
    }
}

static int getUrl(int status) {
    //这个文件不可写注释
    //读取工程目录下url.properties文件
    File propFile = new File('url.properties')
    if (propFile.exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        switch (status) {
            case 0:
                return Integer.parseInt(props['TEST_URL'])      //测试
            case 1:
                return Integer.parseInt(props['PREVIEW_URL'])   //仿真
            case 2:
                return Integer.parseInt(props['RELEASE_URL'])   //线上
            default:
                return Integer.parseInt(props['RELEASE_URL'])   //线上
        }
    }
    return 2        //线上
}


